var suite = require('./_utils').suite

module.exports = suite(function (t) {
  t.test('Mixed wildcards', function (t) {
    t.testPerSeparator('? and *', function (t, sep) {
      t.match('?*')('onetwo')
      t.match('?*')('o')
      t.dontMatch('?*')('')
      t.dontMatch('*?')('')

      t.match('?ne*')('onetwo')
      t.dontMatch('one?*')('one')
      t.dontMatch('?ne*')('ne/two')
      t.match('?*/')('one/')
      t.match('?*/*')('one/')
      t.match('?*/*')('one/two')
      t.match('?*?')('oe')
      t.match('?*?')('one')
      t.match('?*?')('onnne')
      t.match('?*?/*')('one/')
      t.match('?*?/*')('one/two')
      t.match('?*?/*/*')('one/two/three')
      t.match('?*?/*/*')('one//')
      t.dontMatch('?*?')('o')
      t.dontMatch('?*?/*')('')
      t.dontMatch('?*?/*/*')('')
      t.dontMatch('?*?/*/*')('one')
      t.dontMatch('?*?/*/*')('o/two/three')
      t.dontMatch('?*?/*')('one')
      t.dontMatch('?*?/*/*')('one/two')
      t.dontMatch('?*/*')('one')

      if (sep) {
        t.dontMatch('?*')('/')
        t.dontMatch('*?')('/')
        t.dontMatch('?ne*')('one/two')
        t.dontMatch('?*?/*')('one/two/three')
        t.dontMatch('?*?/*/*')('one/two/three/four')
        t.dontMatch('?*')('one/')
        t.dontMatch('?*')('/one')
        t.dontMatch('?*/*')('one/two/')
        t.dontMatch('?*?')('/one')
        t.dontMatch('?*?')('o/e')
        t.dontMatch('?*/*')('one/two/three')
      }
    })

    t.testPerSeparator('* and **', function (t, sep) {
      t.match('*/**')('/')
      t.match('*/**')('one/two')
      t.match('**/*')('one/two')
      t.match('one**/*')('one/two')
      t.match('one*/**')('one/two')
      t.match('**one*/**')('one/two')

      t.match('*/**')('_/')
      t.match('*/**')('///')
      t.match('*/**')('two/three')
      t.match('*/**')('___/three')
      t.match('*/**')('___/three///')
      t.match('*/**')('/three')
      t.match('*/**')('//three')
      t.match('**/*')('one/two/three')
      t.match('**/*')('one/*/three')
      t.match('**/*')('one/*/**')
      t.match('*/**/*')('one/two/three')
      t.match('*/**/*')('one/two/three/four/five')
      t.match('*/**/*')('one/two/*/four/five')
      t.match('*/**/*')('one/two/*/four/**')
      t.match('*/**/*')('one/_/three')
      t.match('one/*/**')('one/two/three')
      t.match('one/*/**')('one/two/three/four')
      t.match('one/*/**')('one/_/_')
      t.match('one/*/**')('one/*/_**')
      t.match('one/**/three/*')('one/two/three/four')
      t.match('*e/**e')('one/one')
      t.match('*e/**e')('e/e')
      t.dontMatch('one/*/**')('')
      t.dontMatch('one/*/**')('/')
      t.dontMatch('one/*/**')('//')
      t.dontMatch('*/**/one')('')
      t.dontMatch('*/**/one')('/')
      t.dontMatch('*/**/one')('//')
      t.dontMatch('*/**/one')('one/two')
      t.dontMatch('*/**/one')('two/one/two')
      t.dontMatch('*e/**e')('one/two')
      t.dontMatch('*e/**e')('two/e')
      t.dontMatch('one**/*')('one')
      t.dontMatch('*/**')('')
      t.dontMatch('*/**')('_')
      t.dontMatch('*/**')('two')
      t.dontMatch('*/**/*/**')('one/two')
      t.dontMatch('one/*/**')('one/two')
      t.dontMatch('one/*/**')('one/***')
      t.dontMatch('*/**/*')('one')
      t.dontMatch('*/**/*/**')('one')
      t.dontMatch('one/*/**')('one')
      t.dontMatch('*/**/one')('one')

      // TODO: decide on this one
      t.skip('**/*', '')

      if (sep) {
        t.match('**/*')('one')
        t.match('*/**/*')('one/two')
        t.match('one/**/two/*')('one/two/three')
        t.match('*/**/*/**')('one/two/three')
      }
    })

    t.testPerSeparator('? and **', function (t, sep) {
      t.match('?**')('o')
      t.match('?**')('one')
      t.dontMatch('?**')('')
      t.dontMatch('one?**')('one')
      t.dontMatch('?ne**')('ne/two')

      t.match('?ne/**')('one/two')
      t.match('**/?')('one/t')
      t.match('**/?')('one/two/three/f')
      t.match('???/**/???')('one/three/two')
      t.match('???/**/???')('one//two')
      t.dontMatch('**/?')('')
      t.dontMatch('?/**')('one/two')
      t.dontMatch('**/?')('one')
      t.dontMatch('???/**/???')('one/two/three')
      t.dontMatch('???/**/???')('one')
      t.dontMatch('???/**/???')('onetwo')

      if (sep) {
        t.match('**/?')('o')
        t.match('???/**/???')('one/two')
      }
    })

    t.testPerSeparator('?, * and **', function (t, sep) {
      t.match('?*/**')('one/two')
      t.match('?*/?**')('one/two')
      t.match('?*?/**')('one/')
      t.match('?*?/**')('one/two')
      t.match('?*?/**')('one/two/three')
      t.match('?*?/**')('one/two/three/four')
      t.match('*/**/?*')('one/two/three')
      t.match('*/**/?*')('/two/three')
      t.match('*/**/?*')('one/two/three/four')
      t.dontMatch('?*?/**')('')
      t.dontMatch('?*?/**')('/')
      t.dontMatch('?*?/**')('o')
      t.dontMatch('*/**/?*')('')
      t.dontMatch('?*/**')('one')
      t.dontMatch('?*/**')('/two')
      t.dontMatch('?*?/**')('oe')
      t.dontMatch('?*?/**')('one')
      t.dontMatch('?*?/**')('o/two')
      t.dontMatch('*/**/?*')('o')
      t.dontMatch('*/**/?*')('o/')

      if (sep) {
        t.match('*/**/?*')('/o')
        t.match('*/**/?*')('/one')
        t.match('*/**/?*')('one/two')
      }
    })

    // TODO: add tests for escaped wildcards
  })
})
